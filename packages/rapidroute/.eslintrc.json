{
  "plugins": [
    "@rjwadley/format-gsap",
    "ssr-friendly",
    "sort-styled-components"
  ],
  "extends": [
    "plugin:ssr-friendly/recommended",
    "airbnb",
    "airbnb/hooks",
    "@rapidroute/eslint-config-base",
    "airbnb-typescript",
    "plugin:prettier/recommended"
  ],
  "rules": {
    /**
     *  Mandatory Rules
     */

    // our format style for gsap
    "@rjwadley/format-gsap/compact-functions": "error",

    // sort styled components
    "sort-styled-components/sort-styled-components": "warn",
    // complementary rule to sort styled components
    "no-multiple-empty-lines": "warn",

    // prettier will conflict with gsap formatter
    "prettier/prettier": "off",

    // we define styled components at the bottom, which is better for readability but incompatible with this rule
    "@typescript-eslint/no-use-before-define": "off",

    // any custom hooks that take dependecies need to be specified here
    "react-hooks/exhaustive-deps": [
      "error",
      {
        "additionalHooks": "(useDeepCompareEffect|useDeepCompareMemo|useDeepCompareCallback|useAnimation)"
      }
    ],

    // use inline default props instead of defaultProps
    "react/require-default-props": [
      "error",
      {
        "functions": "defaultArguments"
      }
    ],

    // react doesn't need to be in scope for jsx
    "react/react-in-jsx-scope": "off",

    // allow console.error
    "no-console": ["error", { "allow": ["error"] }],

    // allow fragment expressions
    "react/jsx-no-useless-fragment": ["error", { "allowExpressions": true }],

    // check fragments for keys
    "react/jsx-key": ["error", { "checkFragmentShorthand": true }],

    // allow prop spreading (since we're using typescript)
    "react/jsx-props-no-spreading": "off",

    // disable unknown prop warnings (since we're using typescript)
    "react/no-unknown-property": "off"
  },
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "settings": {
    "import/resolver": {
      "typescript": {} // this loads <rootdir>/tsconfig.json to eslint
    }
  }
}
